<?xml version="1.0"?>
<!-- build.xml - Build file for Sample Cytoscape Plugin -->
<project name="KGMLReader" default="all" basedir=".">

	<!-- Name of Plug In -->
	<!-- Change this to the name of your Plug In -->
	<!-- The name is used to create the plugin JAR file -->
	<!-- adding this line to test cvs commit -->
	<property name="plugin.name" value="KGMLReader" />
	
	<!-- Version of plugin -->
	<property name="version" value="0.11" />

	<!-- The directory containing source code -->
	<property name="src.dir" value="src" />

	<!--  The directory containing library jar files -->
	<property name="cyto.dir" value="../cytoscape" />
        <property name="cyto.lib.dir" value="${cyto.dir}/lib" />
	<property name="lib.dir" value="lib" />
	<property name="resources.dir" value="resources" />

	<!-- Temporary build directories -->
	<property name="build.dir" value="build" />
	<property name="build.classes" value="${build.dir}/classes" />
	<property name="doc.dir" value="doc" />


	<property name="test.src.dir" value="test" />
	<property name="test.build.dir" value="testBuild" />
	<property name="test.classes" value="${test.build.dir}/classes" />

	<!-- JUnit report directory -->
	<property name="junit.report.dir" value="./junit-reports" />

	<property name="package.generated" value="org.cytoscape.data.reader.kgml.generated" />
	<property name="package.generated.dir" value="org/cytoscape/data/reader/kgml/generated" />

	<!-- Global "magic" property for <javac> -->
	<property name="build.compiler" value="modern" />

	<!-- Classpath with all lib JAR Files and all Cytoscape Core classes -->
	<path id="classpath">
		<pathelement path="${build.classes}" />
		<pathelement path="${test.build.dir}/classes" />
		<pathelement path="${cyto.dir}/build/classes" />
		<fileset dir="${cyto.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- ======================================================= -->
	<!-- For XJC compiler task -->
	<!-- ======================================================= -->
	<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
		<classpath refid="classpath" />
	</taskdef>

	<!-- ======================================================= -->
	<!-- Clean generated packages -->
	<!-- ======================================================= -->
	<target name="clean-generated" description="Delete XJC generated packages.">
		<!-- Clean up generated packages -->
		<delete dir="${src.dir}/${package.generated.dir}" />
		<delete dir="${build.classes}/${package.generated.dir}" />

	</target>

	<!-- ======================================================= -->
	<!-- Generate package using XJC compiler            -->
	<!-- ======================================================= -->
	<target name="bind" depends="clean-generated" description="Run XJC to generate new packages.">
		<mkdir dir="${src.dir}/${package.generated.dir}" />
		<mkdir dir="${build.classes}/${package.generated.dir}" />

		<xjc schema="${resources.dir}/KGML_v0.7.1_.dtd" destdir="${src.dir}" package="${package.generated}">
			<produces dir="${src.dir}" includes="* impl/*" />
			<arg value="-dtd" />
		</xjc>

		<!-- copy prop file into build dir -->
		<echo>Copying jaxb.properties from ${src.dir}/cytoscape/generated to build dir...</echo>
		<copy todir="${build.classes}/${package.generated.dir}">
			<fileset dir="${src.dir}/${package.generated.dir}" includes="*.properties" />
		</copy>
	</target>


	<!-- Target to create the build directories prior to compilation -->
	<target name="prepare">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes}" />
		<mkdir dir="${doc.dir}" />
		<mkdir dir="${test.build.dir}" />
		<mkdir dir="${test.classes}" />
	</target>

	<!--  Target to clean out all directories -->
	<target name="clean" description="Removes all generated files." depends="clean-generated">
		<delete dir="${build.dir}" />
		<delete dir="${doc.dir}" />
		<delete dir="${test.build.dir}" />
		<delete dir="${test.classes}" />
		<delete dir="${junit.report.dir}" />
	</target>

	<!-- Target to create Cytoscape Jar File  -->
	<target name="build_cytoscape">
		<ant antfile="../cytoscape/build.xml" inheritAll="false" target="jar" />
	</target>

	<!-- Target to create the javadoc information -->
	<target name="doc" depends="prepare">
		<javadoc destdir="${doc.dir}" Private="yes" classpathref="classpath">
			<fileset dir="${src.dir}" defaultexcludes="no" />
		</javadoc>
	</target>


	<!--  Target to compile all Plug In Code -->
	<target name="compile" depends="prepare, bind" description="Compiles all PlugIn source code.">
		<javac debug="Yes" srcdir="${src.dir}" destdir="${build.classes}" deprecation="yes" 
			excludes="**/bak/**" nowarn="off" source="1.5" target="1.5" optimize="on" includeAntRuntime="false">
			<classpath refid="classpath" />
		</javac>
	</target>

	<!--  Create PlugIn Jar File (Unobfuscated) -->
	<target name="jar" depends="compile" description="Creates PlugIn Jar File.">
		<unzip dest="${build.classes}">
			<fileset dir="${lib.dir}" includes="*" />
		</unzip>
		<copy todir="${build.classes}/org/cytoscape/data/reader/kgml" file="${resources.dir}/plugin.props" />
		<jar destfile="${build.dir}/${plugin.name}.jar">
			<manifest>
				<attribute name="Cytoscape-Plugin" value="org.cytoscape.data.reader.kgml.KGMLReaderPlugin" />
			</manifest>
			<fileset dir="${build.classes}" />
		</jar>
		<echo message="${plugin.name}.jar is now complete.  It is located in build/ directory" />
	</target>


	<!-- Run ALL -->
	<target name="all" depends="test" description="Creates plugin jar and test it" />



	<!-- =================================================================== -->
	<!-- Compiles the tableImport test and creates jar                       -->
	<!-- =================================================================== -->
	<target name="compile-tests" depends="jar">
		<mkdir dir="${test.build.dir}" />
		<javac srcdir="${test.src.dir}" includes="**/*" destdir="${test.classes}" deprecation="yes" optimize="yes">
			<classpath refid="classpath" />
		</javac>

		<jar destfile="${test.build.dir}/KGMLReaderTests.jar">
			<fileset dir="${test.classes}" includes="**/*" />
			<fileset dir="./testData" includes="**/*" />
		</jar>
	</target>

	<!-- =================================================================== -->
	<!-- Runs all test cases.                                    -->
	<!-- =================================================================== -->
	<target name="test" depends="compile-tests">
		<mkdir dir="${junit.report.dir}" />
		<junit printsummary="yes" haltonfailure="no" maxmemory="512m">
			<classpath refid="classpath">

			</classpath>
			<formatter type="plain" usefile="true" />
			<formatter type="xml" usefile="true" />
			<batchtest fork="no" todir="${junit.report.dir}" failureProperty="junit.test.failure" errorProperty="junit.test.failure">
				<fileset dir="${test.src.dir}" includes="**/*Test.java" />
			</batchtest>
		</junit>

		<junitreport todir="${junit.report.dir}">
			<fileset dir="${junit.report.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${junit.report.dir}" />
		</junitreport>

		<fail message="TEST FAILURE! Details: ${junit.report.dir}/index.html" if="junit.test.failure" />
	</target>

	<target name="release" depends="all" description="Upload 'jar' to Downloads.">
		<taskdef name="gcupload" classname="net.bluecow.googlecode.ant.GoogleCodeUploadTask">
			<classpath refid="classpath" />
		</taskdef>
		<property file="build.credentials.properties" />
		<fail unless="gc.username" message="Missing property 'gc.username' from file 'build.credentials.properties'." />
		<fail unless="gc.username" message="Missing property 'gc.username' from file 'build.credentials.properties'." />
		<gcupload username="${gc.username}" 
			password="${gc.password}" projectname="${ant.project.name}" 
			filename="${build.dir}/KGMLReader.jar" 
			targetfilename="KGMLReader.jar" 
			summary="Version ${version} of KGMLReader" labels="Featured, Type-Package" />
	</target>

</project>
